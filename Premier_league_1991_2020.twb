<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0514.2217                               -->
<workbook original-version='18.1' source-build='2025.2.0 (20252.25.0514.2217)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Premier_League_Player_Stats_Clean' inline='true' name='federated.18g1bvk1fjx77616m7glw0kjaah3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Premier_League_Player_Stats_Clean' name='textscan.0ltg9k50zmmj2416kmyin166gxnd'>
            <connection class='textscan' directory='C:/Users/HB Laptop Store/OneDrive/Desktop/premier league statistics' filename='Premier_League_Player_Stats_Clean.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0ltg9k50zmmj2416kmyin166gxnd' name='Premier_League_Player_Stats_Clean.csv' table='[Premier_League_Player_Stats_Clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Name' ordinal='0' />
            <column datatype='string' name='Club' ordinal='1' />
            <column datatype='string' name='Position' ordinal='2' />
            <column datatype='real' name='Age' ordinal='3' />
            <column datatype='integer' name='Appearances' ordinal='4' />
            <column datatype='integer' name='Goals' ordinal='5' />
            <column datatype='real' name='Goals per match' ordinal='6' />
            <column datatype='real' name='Headed goals' ordinal='7' />
            <column datatype='real' name='Goals with right foot' ordinal='8' />
            <column datatype='real' name='Goals with left foot' ordinal='9' />
            <column datatype='real' name='Penalties scored' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Premier_League_Player_Stats_Clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Premier_League_Player_Stats_Clean.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Club</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Club]</local-name>
            <parent-name>[Premier_League_Player_Stats_Clean.csv]</parent-name>
            <remote-alias>Club</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Position</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Position]</local-name>
            <parent-name>[Premier_League_Player_Stats_Clean.csv]</parent-name>
            <remote-alias>Position</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[Premier_League_Player_Stats_Clean.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Appearances</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Appearances]</local-name>
            <parent-name>[Premier_League_Player_Stats_Clean.csv]</parent-name>
            <remote-alias>Appearances</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Goals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Goals]</local-name>
            <parent-name>[Premier_League_Player_Stats_Clean.csv]</parent-name>
            <remote-alias>Goals</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Goals per match</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Goals per match]</local-name>
            <parent-name>[Premier_League_Player_Stats_Clean.csv]</parent-name>
            <remote-alias>Goals per match</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Headed goals</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Headed goals]</local-name>
            <parent-name>[Premier_League_Player_Stats_Clean.csv]</parent-name>
            <remote-alias>Headed goals</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Goals with right foot</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Goals with right foot]</local-name>
            <parent-name>[Premier_League_Player_Stats_Clean.csv]</parent-name>
            <remote-alias>Goals with right foot</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Goals with left foot</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Goals with left foot]</local-name>
            <parent-name>[Premier_League_Player_Stats_Clean.csv]</parent-name>
            <remote-alias>Goals with left foot</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Penalties scored</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Penalties scored]</local-name>
            <parent-name>[Premier_League_Player_Stats_Clean.csv]</parent-name>
            <remote-alias>Penalties scored</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='real' name='[Age]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Appearances]' role='measure' type='quantitative' />
      <column datatype='real' name='[Goals per match]' role='measure' type='quantitative' />
      <column datatype='real' name='[Goals with left foot]' role='measure' type='quantitative' />
      <column datatype='real' name='[Goals with right foot]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Goals]' role='measure' type='quantitative' />
      <column datatype='real' name='[Headed goals]' role='measure' type='quantitative' />
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Penalties scored]' role='measure' type='quantitative' />
      <column caption='Premier_League_Player_Stats_Clean.csv' datatype='table' name='[__tableau_internal_object_id__].[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Appearances]' derivation='Avg' name='[avg:Appearances:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Appearances]' derivation='Count' name='[cnt:Appearances:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Appearances]' derivation='Sum' name='[sum:Appearances:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Goals per match]' derivation='Sum' name='[sum:Goals per match:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Goals with left foot]' derivation='Sum' name='[sum:Goals with left foot:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Goals with right foot]' derivation='Sum' name='[sum:Goals with right foot:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Goals]' derivation='Sum' name='[sum:Goals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Headed goals]' derivation='Sum' name='[sum:Headed goals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Penalties scored]' derivation='Sum' name='[sum:Penalties scored:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/HBLAPT~1/AppData/Local/Temp/TableauTemp/#TableauTemp_1e9nokm1t9qoca1ayg2ov0l2jbvt.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/13/2025 12:52:09 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name</remote-alias>
              <ordinal>0</ordinal>
              <family>Premier_League_Player_Stats_Clean.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>571</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Club</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Club]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Club</remote-alias>
              <ordinal>1</ordinal>
              <family>Premier_League_Player_Stats_Clean.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Position</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Position]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Position</remote-alias>
              <ordinal>2</ordinal>
              <family>Premier_League_Player_Stats_Clean.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Age</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Age</remote-alias>
              <ordinal>3</ordinal>
              <family>Premier_League_Player_Stats_Clean.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Appearances</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Appearances]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Appearances</remote-alias>
              <ordinal>4</ordinal>
              <family>Premier_League_Player_Stats_Clean.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>198</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Goals</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Goals]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Goals</remote-alias>
              <ordinal>5</ordinal>
              <family>Premier_League_Player_Stats_Clean.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>55</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Goals per match</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Goals per match]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Goals per match</remote-alias>
              <ordinal>6</ordinal>
              <family>Premier_League_Player_Stats_Clean.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>72</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Headed goals</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Headed goals]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Headed goals</remote-alias>
              <ordinal>7</ordinal>
              <family>Premier_League_Player_Stats_Clean.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Goals with right foot</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Goals with right foot]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Goals with right foot</remote-alias>
              <ordinal>8</ordinal>
              <family>Premier_League_Player_Stats_Clean.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Goals with left foot</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Goals with left foot]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Goals with left foot</remote-alias>
              <ordinal>9</ordinal>
              <family>Premier_League_Player_Stats_Clean.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Penalties scored</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Penalties scored]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Penalties scored</remote-alias>
              <ordinal>10</ordinal>
              <family>Premier_League_Player_Stats_Clean.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout common-percentage='1' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Adam Webster&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Allan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ashley Barnes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bertrand Traoré&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cengiz Ünder&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Conor Gallagher&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Martin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eberechi Eze&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fabian Delph&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gary Cahill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harvey Elliott&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jack Stephens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamie Vardy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;João Moutinho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jonny&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kamil Grosicki&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyle Edwards&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luke Ayling&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mason Holgate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Max Sanders&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Naby Keita&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oleksandr Zinchenko&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pedro Neto&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Robbie Brady&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ryan Inniss&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sergio Romero&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thiago&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Virgil van Dijk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yves Bissouma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Connolly&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alex McCarthy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Angus Gunn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ben White&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Çaglar Söyüncü&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Christian Benteke&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Danny Ings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diogo Dalot&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eric Dier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fousseni Diabaté&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Harrison Ashby&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ivan Cavaleiro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;James McCarthy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jean Michael Seri&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;John Lundstram&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Josh Onomah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ki-Jana Hoever&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liam Delap&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mario Lemina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Matt Targett&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mohamed Elneny&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nemanja Matic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pascal Groß&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Regan Slater&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ruben Loftus-Cheek&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Séamus Coleman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stuart Armstrong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trézéguet&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Willy Boly&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Abdoulaye Doucouré&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alfie McCalmont&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antonee Robinson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bernard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Calum Chambers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ciaran Clark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Darren Randolph&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Donny van de Beek&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethan Ampadu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gabriel Jesus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harry Maguire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jack Harrison&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;James Tomkins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jeffrey Schlupp&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jonas Lössl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Juan Mata&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Konstantinos Tsimikas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lucas Moura&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Martin Dubravka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matthew Lowton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moussa Djenepo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niels Nkounkou&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patrick van Aanholt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ricardo Pereira&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rúnar Alex Rúnarsson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sepp van den Berg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanguy Ndombele&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tyrone Mings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yan Valery&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adrien Silva&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;André-Frank Zambo Anguissa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ayoze Pérez&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bobby De Cordova-Reid&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charlie Cresswell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dale Stephens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dean Henderson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elia Caprile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fabri&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Giovani Lo Celso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Henri Lansbury&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jairo Riedewald&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jaroslaw Jach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Joe Hart&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan Pickford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Keinan Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leander Dendoncker&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mamadou Sakho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mateo Kovacic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mesut Özil&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nathan Redmond&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oliver Norwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Phil Jagielka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roberto Firmino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sam Johnstone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sofiane Boufal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Timothy Castagne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wes Morgan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Adama Traoré&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Allan Saint-Maximin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ashley Westwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Billy Gilmour&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cenk Tosun&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Conor Hourihane&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David McGoldrick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eddie Nketiah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fabian Schär&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gedson Fernandes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harvey White&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jack Wilshere&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jan Bednarek&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;João Virgínia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jonny Evans&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Karl Darlow&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyle Walker&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luke Shaw&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mason Mount&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maxime Le Marchand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nampalys Mendy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oliver Burke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peter Gwargis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Robbie Gotts&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ryan Sessegnon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shane Long&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thiago Silva&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vitinha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zack Steffen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aboubakar Kamara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alfie Whiteman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antonio Rüdiger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bernardo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameron Carter-Vickers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connor Wickham&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;David Button&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Douglas Luiz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ezgjan Alioski&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabriel Magalhães&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Harry Wilson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jack O&apos;Connell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;James Ward-Prowse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jesse Lingard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jonathan Bond&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kai Havertz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kortney Hause&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lucas Torreira&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Martin Kelly&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Matty James&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moussa Sissoko&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nya Kirby&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paul Dummett&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Richarlison&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ryan Bertrand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serge Aurier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tariq Lamptey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vicente Guaita&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yannick Bolasie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alex Cochrane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Andy Carroll&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ben Mee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bruno Fernandes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chris Wood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Daniel Langley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dennis Cirkin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Enda Stevens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Filip Benkovic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hal Robson-Kanu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Islam Slimani&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;James Maddison&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jayden Bogle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;John Egan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Josh Brownhill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kevin Long&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewis Dunk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marcus Rashford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Matt Phillips&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Michy Batshuayi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Neeskens Kebano&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pablo Fornals&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raúl Jiménez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Romaric Yapi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Scott McTominay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Steven Alzate&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tommy Doyle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;William Smallbone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Cresswell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alex Oxlade-Chamberlain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anthony Driscoll-Glennon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ben Woodburn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Callum Hudson-Odoi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Christian Fuchs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Danny Ward&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Diogo Jota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric García&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fraser Forster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Harrison Reed&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jack Clarke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;James Milner&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jean-Philippe Gbamin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;John McGinn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kieran Gibbs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Loris Karius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mark Gillespie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Matteo Guendouzi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mohamed Salah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nick Pope&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pascal Struijk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reiss Nelson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rúben Neves&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sean Longstaff&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stuart Dallas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tyler Roberts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Willy Caballero&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ajibola Alese&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andriy Yarmolenko&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ben Davies&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brandon Williams&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chris Basham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Daniel Barlaser&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Demarai Gray&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Emiliano Martínez&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ferran Torres&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gylfi Sigurdsson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ilkay Gündogan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamal Lewis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Javier Manquillo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joelinton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joseph Willock&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kepa Arrizabalaga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Leif Davis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marcos Alonso&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Matt Doherty&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Michael Verrips&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Neal Maupay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ørjan Nyland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rachid Ghezzal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romain Saïss&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Scott Carson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stefan Johansen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tom Davies&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Will Norris&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adam Forshaw&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alireza Jahanbakhsh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anwar El Ghazi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bernardo Silva&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Caoimhin Kelleher&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Conor Coady&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;David de Gea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dwight Gayle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ezri Konsa Ngoyo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gabriel Martinelli&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harry Winks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jack Robinson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamie Shackleton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jimmy Dunne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jonjo Shelvey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kalvin Phillips&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kurt Zouma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luka Milivojevic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marvelous Nakamba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Max Lowe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Muhamed Besic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Odion Ighalo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paul Pogba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Riyad Mahrez&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ryan Fraser&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sergio Agüero&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Teden Mengi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Victor Lindelöf&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yerry Mina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ahmed El Mohamady&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Andreas Christensen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bailey Peacock-Farrell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bobby Thomas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charlie Taylor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dan Burn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DeAndre Yedlin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Emerson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Federico Fernández&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gonçalo Cardoso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Henri Saivet&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jake Livermore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jarrad Branthwaite&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joel Matip&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jorginho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kelechi Iheanacho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leandro Trossard&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manuel Lanzini&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mateusz Bogusz&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michael Hector&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nathan Tella&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Olivier Giroud&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phil Jones&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Robin Koch&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sam Woods&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sokratis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Timothy Fosu-Mensah&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wesley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ahmed Hegazi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andreas Pereira&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barry Douglas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brandon Austin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Che Adams&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dani Ceballos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Declan Rice&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Emil Krafth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Felipe Anderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grady Diangana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hugo Lloris&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jake Vokins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jarrod Bowen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joël Veltman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;José Izquierdo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenneth Zohore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lee Grant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marc Albrighton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mateusz Klich&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michael Keane&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nathan Trott&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ollie Watkins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pierre-Emerick Aubameyang&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rodrigo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sander Berge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solly March&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toby Alderweireld&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wilfred Ndidi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aleksandar Mitrovic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Andros Townsend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ben Johnson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Branislav Ivanovic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chris Smalling&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Daniel James&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denis Odoi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emmanuel Longelo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fikayo Tomori&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hakim Ziyech&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isaac Hayden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;James Justin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jay Rodriguez&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jóhann Gudmundsson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Josh Benson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kevin De Bruyne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leonardo Campana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marcos Rojo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Matt Macey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Michail Antonio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Neco Williams&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oskar Buur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Raheem Sterling&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romaine Sawyers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Scott Dann&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stephen Henderson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tom Heaton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;William Saliba&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alex Iwobi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Angelo Ogbonna&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ben Osborn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bukayo Saka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Christian Atsu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Daniel Podence&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dennis Praet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eric Bailly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Florin Andone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hamza Choudhury&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Issa Diop&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;James McArthur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jayson Molumby&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;John Fleck&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Josh Cullen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kevin McDonald&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liam Cooper&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marek Rodák&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Matt Ritchie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miguel Almirón&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Neil Taylor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pablo Hernández&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reece James&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ross Barkley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sead Kolasinac&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Steven Bergwijn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trent Alexander-Arnold&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Willian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adrián&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alphonse Areola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Axel Tuanzebe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Billy Sharp&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;César Azpilicueta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Conor Townsend&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Davinson Sánchez&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ederson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fabinho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;George Baldock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haydon Roberts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jacob Murphy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jannik Vestergaard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joe Bryan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan Ayew&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kasper Schmeichel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyle Walker-Peters&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luke Thomas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mat Ryan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maximilian Kilman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nathan Aké&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oliver Casey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Phil Bardsley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Robert Sánchez&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sadio Mané&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shkodran Mustafi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tim Ream&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wayne Hennessey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zak Brunt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adam Lallana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alisson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arthur Masuaku&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bernd Leno&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cédric Kipré&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Conor Coventry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;David Luiz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dwight McNeil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fabián Balbuena&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gareth Bale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harvey Barnes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jack Rodwell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamie Soule&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;João Cancelo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jonjoe Kenny&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kamil Grabara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyle Bartley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lukasz Fabianski&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mason Greenwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Max Meyer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;N&apos;Golo Kanté&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ola Aina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paulo Gazzaniga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rob Holding&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ryan Fredericks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sergio Reguilón&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Theo Walcott&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Viktor Gyökeres&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Youri Tielemans&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aaron Ramsdale&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alexandre Lacazette&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anthony Gordon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Beni Baningime&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Callum Robinson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Christian Pulisic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dara O&apos;Shea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Divock Origi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Erik Lamela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fred&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harry Kane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jack Cork&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;James Rodríguez&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jed Steer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;John Ruddy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Juan Castillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kieran Tierney&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lovre Kalinic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mark Noble&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Matthew Cash&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mohammed Salisu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicolás Otamendi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Patrick Bamford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rekeem Harper&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rúben Vinagre&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sébastien Haller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Takumi Minamino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tyrese Francois&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Xande Silva&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ainsley Maitland-Niles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andrew Robertson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ben Chilwell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brandon Pierrick&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cheikhou Kouyaté&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daniel Amartey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dele Alli&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Emile Smith Rowe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fernandinho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Granit Xhaka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ian Poveda-Ocampo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaal Lascelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jason Steele&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joel Ward&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joseph Gomez&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenny Tete&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lee Peltier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marçal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Matheus Pereira&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michael Obafemi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nathaniel Phillips&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oriol Romeu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pierre-Emile Højbjerg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rodrigo Moreno&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sandro Ramírez&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Son Heung-Min&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tom Cairney&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wilfried Zaha&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adrián Bernabé&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;André Gomes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aymeric Laporte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Björn Engels&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charlie Austin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curtis Jones&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Davy Pröpper&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eldin Jakupovic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fábio Silva&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georginio Wijnaldum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Héctor Bellerín&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jacob Ramsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japhet Tanganga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joe Gelhardt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan Henderson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kean Bryan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lars Dendoncker&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lys Mousset&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Matej Vydra&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meritan Shabani&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nathan Ferguson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oliver McBurnie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phil Foden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Robert Snodgrass&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sam Field&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Simon Moore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timo Werner&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wes Foderingham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aaron Wan-Bissaka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alexis Mac Allister&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anthony Martial&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benjamin Mendy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Callum Wilson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Christian Walton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Darnell Furlong&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominic Calvert-Lewin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Erik Pieters&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frédéric Guilbert&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harry Lewis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jack Grealish&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;James Tarkowski&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jeff Hendrick&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;John Stones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Juan Foyth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kiko Casilla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lucas Digne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marko Grujic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Matthew Longstaff&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moise Kean&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicolas Pépé&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Patrick Roberts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rhian Brewster&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rui Patrício&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Semi Ajayi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tammy Abraham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tyrick Mitchell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Xherdan Shaqiri&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals with left foot:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.18g1bvk1fjx77616m7glw0kjaah3].[avg:Appearances:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.18g1bvk1fjx77616m7glw0kjaah3].[cnt:Appearances:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Appearances:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Penalties scored:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Headed goals:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.18g1bvk1fjx77616m7glw0kjaah3].[__tableau_internal_object_id__].[cnt:Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals with right foot:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals per match:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Premier_League_Player_Stats_Clean.csv' id='Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25'>
            <properties context=''>
              <relation connection='textscan.0ltg9k50zmmj2416kmyin166gxnd' name='Premier_League_Player_Stats_Clean.csv' table='[Premier_League_Player_Stats_Clean#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Name' ordinal='0' />
                  <column datatype='string' name='Club' ordinal='1' />
                  <column datatype='string' name='Position' ordinal='2' />
                  <column datatype='real' name='Age' ordinal='3' />
                  <column datatype='integer' name='Appearances' ordinal='4' />
                  <column datatype='integer' name='Goals' ordinal='5' />
                  <column datatype='real' name='Goals per match' ordinal='6' />
                  <column datatype='real' name='Headed goals' ordinal='7' />
                  <column datatype='real' name='Goals with right foot' ordinal='8' />
                  <column datatype='real' name='Goals with left foot' ordinal='9' />
                  <column datatype='real' name='Penalties scored' ordinal='10' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Age Vs Goal Per Match'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman'>Impact of Age on scoring efficiency (Goal Per Match)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Premier_League_Player_Stats_Clean' name='federated.18g1bvk1fjx77616m7glw0kjaah3' />
          </datasources>
          <datasource-dependencies datasource='federated.18g1bvk1fjx77616m7glw0kjaah3'>
            <column aggregation='Sum' datatype='real' name='[Age]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Goals per match]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Goals]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
            <column-instance column='[Goals per match]' derivation='Sum' name='[sum:Goals per match:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goals]' derivation='Sum' name='[sum:Goals:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]' />
              <size column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals:qk]' />
              <lod column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals per match:qk]</rows>
        <cols>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Age:ok]</cols>
      </table>
      <simple-id uuid='{B995999A-6C7F-4962-BE2B-3B1A59F58306}' />
    </worksheet>
    <worksheet name='Distribution of players per age'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Distribution of player ages in the pemier league </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Premier_League_Player_Stats_Clean' name='federated.18g1bvk1fjx77616m7glw0kjaah3' />
          </datasources>
          <datasource-dependencies datasource='federated.18g1bvk1fjx77616m7glw0kjaah3'>
            <column aggregation='Sum' datatype='real' name='[Age]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Name]' derivation='CountD' name='[ctd:Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Club:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Arsenal&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Aston-Villa&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Brighton-and-Hove-Albion&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Burnley&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Chelsea&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Crystal-Palace&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Everton&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Fulham&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Leeds-United&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Leicester-City&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Liverpool&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Manchester-City&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Manchester-United&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Newcastle-United&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Sheffield-United&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Southampton&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Tottenham-Hotspur&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;West-Bromwich-Albion&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;West-Ham-United&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Wolverhampton-Wanderers&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Club:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Age:ok]' />
              <text column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[ctd:Name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#79706e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18g1bvk1fjx77616m7glw0kjaah3].[ctd:Name:qk]</rows>
        <cols>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Age:ok]</cols>
      </table>
      <simple-id uuid='{4B39D880-172E-4CC5-82B3-A5C010319230}' />
    </worksheet>
    <worksheet name='Goal types per player'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Times New Roman'> Top 10 Goal types per player </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Premier_League_Player_Stats_Clean' name='federated.18g1bvk1fjx77616m7glw0kjaah3' />
          </datasources>
          <datasource-dependencies datasource='federated.18g1bvk1fjx77616m7glw0kjaah3'>
            <column datatype='integer' name='[Appearances]' role='measure' type='quantitative' />
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column datatype='real' name='[Goals per match]' role='measure' type='quantitative' />
            <column datatype='real' name='[Goals with left foot]' role='measure' type='quantitative' />
            <column datatype='real' name='[Goals with right foot]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Goals]' role='measure' type='quantitative' />
            <column datatype='real' name='[Headed goals]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Penalties scored]' role='measure' type='quantitative' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column caption='Premier_League_Player_Stats_Clean.csv' datatype='table' name='[__tableau_internal_object_id__].[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Premier_League_Player_Stats_Clean.csv_1F4AE407AA874BF4933353C6A549AB25:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
            <column-instance column='[Appearances]' derivation='Sum' name='[sum:Appearances:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goals per match]' derivation='Sum' name='[sum:Goals per match:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goals with left foot]' derivation='Sum' name='[sum:Goals with left foot:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goals with right foot]' derivation='Sum' name='[sum:Goals with right foot:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goals]' derivation='Sum' name='[sum:Goals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Headed goals]' derivation='Sum' name='[sum:Headed goals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Penalties scored]' derivation='Sum' name='[sum:Penalties scored:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Club:nk]'>
            <groupfilter function='level-members' level='[none:Club:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Goals with right foot])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Position:nk]' member='&quot;Defender&quot;' />
              <groupfilter function='member' level='[none:Position:nk]' member='&quot;Forward&quot;' />
              <groupfilter function='member' level='[none:Position:nk]' member='&quot;Goalkeeper&quot;' />
              <groupfilter function='member' level='[none:Position:nk]' member='&quot;Midfielder&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Penalties scored:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]</column>
            <column>[federated.18g1bvk1fjx77616m7glw0kjaah3].[:Measure Names]</column>
            <column>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]</column>
            <column>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Club:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Headed goals:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals with right foot:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals with left foot:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Penalties scored:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.18g1bvk1fjx77616m7glw0kjaah3].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]</rows>
        <cols>([federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Headed goals:qk] + ([federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals with right foot:qk] + ([federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals with left foot:qk] + ([federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Penalties scored:qk] + [federated.18g1bvk1fjx77616m7glw0kjaah3].[Multiple Values]))))</cols>
      </table>
      <simple-id uuid='{967518DF-195A-4F94-AF76-57D945D0419F}' />
    </worksheet>
    <worksheet name='Goals Vs Appeareances'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman'>Goals Vs Appearances</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Premier_League_Player_Stats_Clean' name='federated.18g1bvk1fjx77616m7glw0kjaah3' />
          </datasources>
          <datasource-dependencies datasource='federated.18g1bvk1fjx77616m7glw0kjaah3'>
            <column datatype='integer' name='[Appearances]' role='measure' type='quantitative' />
            <column datatype='real' name='[Goals per match]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Goals]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
            <column-instance column='[Appearances]' derivation='Sum' name='[sum:Appearances:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goals per match]' derivation='Sum' name='[sum:Goals per match:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Goals]' derivation='Sum' name='[sum:Goals:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Appearances:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18g1bvk1fjx77616m7glw0kjaah3].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]' />
              <size column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals per match:qk]' />
              <lod column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals:qk]</rows>
        <cols>[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Appearances:qk]</cols>
      </table>
      <simple-id uuid='{24201383-75EF-4F55-9ADA-5FF37C5B4360}' />
    </worksheet>
    <worksheet name='Top Players by Goals per match '>
      <table>
        <view>
          <datasources>
            <datasource caption='Premier_League_Player_Stats_Clean' name='federated.18g1bvk1fjx77616m7glw0kjaah3' />
          </datasources>
          <datasource-dependencies datasource='federated.18g1bvk1fjx77616m7glw0kjaah3'>
            <column datatype='real' name='[Goals per match]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Goals per match]' derivation='Sum' name='[sum:Goals per match:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Goals per match])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]' direction='DESC' using='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals per match:qk]' />
          <slices>
            <column>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals per match:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]</rows>
        <cols>[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals per match:qk]</cols>
      </table>
      <simple-id uuid='{15E7D539-BFF5-4540-9C49-9C892192E9D7}' />
    </worksheet>
    <worksheet name='Top Scorers'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontname='Times New Roman'>Top 10 Goal Scorers in premier league history</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Premier_League_Player_Stats_Clean' name='federated.18g1bvk1fjx77616m7glw0kjaah3' />
          </datasources>
          <datasource-dependencies datasource='federated.18g1bvk1fjx77616m7glw0kjaah3'>
            <column datatype='integer' name='[Goals]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Name]' derivation='Count' name='[cnt:Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Goals]' derivation='Sum' name='[sum:Goals:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Goals])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]' direction='DESC' using='[federated.18g1bvk1fjx77616m7glw0kjaah3].[cnt:Name:qk]' />
          <slices>
            <column>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals:qk]' />
              <lod column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]' />
              <text column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]</rows>
        <cols>[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals:qk]</cols>
      </table>
      <simple-id uuid='{9F3E8A3F-8356-4B93-955A-AE68AA4BBDDE}' />
    </worksheet>
    <worksheet name='avg goal per match by position'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average goals per match by position</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Premier_League_Player_Stats_Clean' name='federated.18g1bvk1fjx77616m7glw0kjaah3' />
          </datasources>
          <datasource-dependencies datasource='federated.18g1bvk1fjx77616m7glw0kjaah3'>
            <column aggregation='Sum' datatype='real' name='[Age]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Club]' role='dimension' type='nominal' />
            <column datatype='real' name='[Goals per match]' role='measure' type='quantitative' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column-instance column='[Goals per match]' derivation='Avg' name='[avg:Goals per match:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Age:qk]' included-values='in-range'>
            <min>17.0</min>
            <max>34.799999999999997</max>
          </filter>
          <filter class='categorical' column='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Club:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Arsenal&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Aston-Villa&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Brighton-and-Hove-Albion&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Burnley&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Chelsea&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Crystal-Palace&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Everton&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Fulham&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Leeds-United&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Leicester-City&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Liverpool&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Manchester-City&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Manchester-United&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Newcastle-United&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Sheffield-United&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Southampton&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Tottenham-Hotspur&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;West-Bromwich-Albion&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;West-Ham-United&quot;' />
              <groupfilter function='member' level='[none:Club:nk]' member='&quot;Wolverhampton-Wanderers&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18g1bvk1fjx77616m7glw0kjaah3].[avg:Goals per match:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Club:nk]</column>
            <column>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.18g1bvk1fjx77616m7glw0kjaah3].[avg:Goals per match:qk]' value='false' />
            <format attr='break-on-special' field='[federated.18g1bvk1fjx77616m7glw0kjaah3].[avg:Goals per match:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.18g1bvk1fjx77616m7glw0kjaah3].[avg:Goals per match:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]</rows>
        <cols>[federated.18g1bvk1fjx77616m7glw0kjaah3].[avg:Goals per match:qk]</cols>
      </table>
      <simple-id uuid='{F3881797-1BA7-40C2-AA20-DE46F59C4D37}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Premier Leage Dashboard 1991-2020'>
      <style />
      <size maxheight='2000' maxwidth='1700' minheight='1000' minwidth='800' sizing-mode='range' />
      <datasources>
        <datasource caption='Premier_League_Player_Stats_Clean' name='federated.18g1bvk1fjx77616m7glw0kjaah3' />
      </datasources>
      <datasource-dependencies datasource='federated.18g1bvk1fjx77616m7glw0kjaah3'>
        <column aggregation='Sum' datatype='real' name='[Age]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Club]' role='dimension' type='nominal' />
        <column datatype='string' name='[Name]' role='dimension' type='nominal' />
        <column datatype='string' name='[Position]' role='dimension' type='nominal' />
        <column-instance column='[Age]' derivation='None' name='[none:Age:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Club]' derivation='None' name='[none:Club:nk]' pivot='key' type='nominal' />
        <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
        <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98518' id='7' param='horz' type-v2='layout-flow' w='99058' x='471' y='741'>
            <zone h='98518' id='5' type-v2='layout-basic' w='89646' x='471' y='741'>
              <zone h='30186' id='3' name='Top Scorers' w='26647' x='36824' y='36945'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32128' id='11' param='horz' type-v2='layout-flow' w='89646' x='471' y='67131'>
                <zone fixed-size='803' h='32128' id='17' is-fixed='true' name='Goal types per player' w='47706' x='471' y='67131'>
                  <layout-cache minwidth='662' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='32128' id='14' name='Distribution of players per age' w='41929' x='48177' y='67131'>
                  <layout-cache cell-count-w='23' minheight='184' non-cell-size-w='52' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='30186' id='24' name='Top Players by Goals per match ' w='36353' x='471' y='36945'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36204' id='25' name='Age Vs Goal Per Match' w='44823' x='471' y='741'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='488' h='30186' id='12' is-fixed='true' name='avg goal per match by position' w='26646' x='63471' y='36945'>
                <layout-cache minwidth='100' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36204' id='21' name='Goals Vs Appeareances' w='44823' x='45294' y='741'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98518' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9412' x='90117' y='741'>
              <zone h='9701' id='8' name='Top Scorers' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]' type-v2='filter' w='9412' x='90117' y='741'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9701' id='9' name='Top Scorers' pane-specification-id='0' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals:qk]' type-v2='size' w='9412' x='90117' y='10442'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4815' id='10' name='Top Scorers' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]' type-v2='highlighter' w='9412' x='90117' y='20143'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6389' id='13' name='avg goal per match by position' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9412' x='90117' y='24958'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9701' id='15' name='Distribution of players per age' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Club:nk]' type-v2='filter' w='9412' x='90117' y='31347'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9701' id='16' name='Distribution of players per age' pane-specification-id='0' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Age:ok]' type-v2='color' w='9412' x='90117' y='41048'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9701' id='18' name='Goal types per player' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Club:nk]' type-v2='filter' w='9412' x='90117' y='50749'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9701' id='19' name='Goal types per player' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]' type-v2='filter' w='9412' x='90117' y='60450'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9701' id='20' name='Goal types per player' pane-specification-id='1' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[:Measure Names]' type-v2='color' w='9412' x='90117' y='70151'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9701' id='22' name='Goals Vs Appeareances' pane-specification-id='0' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]' type-v2='color' w='9412' x='90117' y='79852'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9706' id='23' name='Goals Vs Appeareances' pane-specification-id='0' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals per match:qk]' type-v2='size' w='9412' x='90117' y='89553'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2750' minheight='2750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98518' id='26' param='vert' type-v2='layout-flow' w='99058' x='471' y='741'>
                <zone fixed-size='280' h='36204' id='25' is-fixed='true' name='Age Vs Goal Per Match' w='44823' x='471' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36204' id='21' is-fixed='true' name='Goals Vs Appeareances' w='44823' x='45294' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9701' id='22' name='Goals Vs Appeareances' pane-specification-id='0' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]' type-v2='color' w='9412' x='90117' y='79852'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9706' id='23' name='Goals Vs Appeareances' pane-specification-id='0' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals per match:qk]' type-v2='size' w='9412' x='90117' y='89553'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='30186' id='24' is-fixed='true' name='Top Players by Goals per match ' w='36353' x='471' y='36945'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9701' id='8' mode='checkdropdown' name='Top Scorers' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]' type-v2='filter' w='9412' x='90117' y='741'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4815' id='10' name='Top Scorers' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]' type-v2='highlighter' w='9412' x='90117' y='20143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='30186' id='3' is-fixed='true' name='Top Scorers' w='26647' x='36824' y='36945'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9701' id='9' name='Top Scorers' pane-specification-id='0' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals:qk]' type-v2='size' w='9412' x='90117' y='10442'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6389' id='13' name='avg goal per match by position' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9412' x='90117' y='24958'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='30186' id='12' is-fixed='true' name='avg goal per match by position' w='26646' x='63471' y='36945'>
                  <layout-cache minwidth='100' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9701' id='18' mode='checkdropdown' name='Goal types per player' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Club:nk]' type-v2='filter' w='9412' x='90117' y='50749'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9701' id='19' mode='checkdropdown' name='Goal types per player' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]' type-v2='filter' w='9412' x='90117' y='60450'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32128' id='17' is-fixed='true' name='Goal types per player' w='47706' x='471' y='67131'>
                  <layout-cache minwidth='662' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9701' id='20' name='Goal types per player' pane-specification-id='1' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[:Measure Names]' type-v2='color' w='9412' x='90117' y='70151'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9701' id='15' mode='checkdropdown' name='Distribution of players per age' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Club:nk]' type-v2='filter' w='9412' x='90117' y='31347'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32128' id='14' is-fixed='true' name='Distribution of players per age' w='41929' x='48177' y='67131'>
                  <layout-cache cell-count-w='23' minheight='184' non-cell-size-w='52' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9701' id='16' name='Distribution of players per age' pane-specification-id='0' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Age:ok]' type-v2='color' w='9412' x='90117' y='41048'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{698D41AB-0C1D-47F2-ABBA-8CF70CE85DCF}' />
    </dashboard>
    <dashboard name='Premier League story' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Verdana'>Premier League Story 1991 -2020</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='260' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3112' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='3942' />
            <zone h='84751' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14419'>
              <flipboard active-id='12' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='This analysis dives into top scorers, player efficiency, age impact, and more.' captured-sheet='Top Scorers' id='1' />
                  <story-point caption='who are the all-time top scorers ' captured-sheet='Top Scorers' id='2' />
                  <story-point caption='average of goal scorers per position' captured-sheet='avg goal per match by position' id='3' />
                  <story-point caption='In this story, we explore the all-time performance of Premier League players using multiple key metrics' captured-sheet='Distribution of players per age' id='6' />
                  <story-point caption='How do players score? Head? Right foot? Left? Penalties?' captured-sheet='Goal types per player' id='8' />
                  <story-point caption='Do more matches mean more goals? Let’s find out.' captured-sheet='Goals Vs Appeareances' id='9' />
                  <story-point caption='Which players were the most efficient scorers?' captured-sheet='Top Players by Goals per match ' id='10' />
                  <story-point caption='Does age affect scoring efficiency? Here’s the trend.' captured-sheet='Age Vs Goal Per Match' id='11' />
                  <story-point caption='This analysis gave us deep insights into the performance and style of Premier League legends' captured-sheet='Premier Leage Dashboard 1991-2020' id='12' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{707D536F-A817-4087-9849-59B0F8CB98BE}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Top Scorers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals:qk]' type='size' />
            <card param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Club:nk]</field>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]</field>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3BDA9B17-926E-4C19-98D1-19B040E48320}' />
    </window>
    <window class='worksheet' name='avg goal per match by position'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Age:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Age:qk]</field>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Club:nk]</field>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ACD183E8-27E3-4B72-83A4-0433BA5BBFDC}' />
    </window>
    <window class='worksheet' name='Distribution of players per age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Club:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Age:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Age:ok]</field>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Club:nk]</field>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]</field>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F58FDF9-3E79-46E6-9062-CCD06FAB8AC1}' />
    </window>
    <window class='worksheet' name='Goal types per player'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Club:nk]' type='filter' />
            <card param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.18g1bvk1fjx77616m7glw0kjaah3].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[:Measure Names]</field>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Club:nk]</field>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]</field>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{42E2DC00-B4B5-4B88-AC5D-363DA0CD13BB}' />
    </window>
    <window class='worksheet' name='Goals Vs Appeareances'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals per match:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Appearances:ok]</field>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]</field>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9735C1CA-BBE1-40A6-8D50-8A6C5347195F}' />
    </window>
    <window class='worksheet' name='Top Players by Goals per match '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C4DE8E1-2452-4C85-82A6-5059A0168964}' />
    </window>
    <window class='worksheet' name='Age Vs Goal Per Match'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.18g1bvk1fjx77616m7glw0kjaah3].[sum:Goals:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Age:ok]</field>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Name:nk]</field>
            <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F10824B-17BB-4681-A83C-8BA1B90F5B19}' />
    </window>
    <window class='dashboard' name='Premier Leage Dashboard 1991-2020'>
      <viewpoints>
        <viewpoint name='Age Vs Goal Per Match'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Distribution of players per age'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Age:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Goal types per player'>
          <highlight>
            <color-one-way>
              <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Goals Vs Appeareances'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.18g1bvk1fjx77616m7glw0kjaah3].[none:Position:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Top Players by Goals per match ' />
        <viewpoint name='Top Scorers' />
        <viewpoint name='avg goal per match by position' />
      </viewpoints>
      <active id='-1' />
      <device-preview selected='Desktop' visible='true' />
      <simple-id uuid='{276DAF22-21A7-42E6-BEC8-02FF5C128AA1}' />
    </window>
    <window class='dashboard' maximized='true' name='Premier League story'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{F204CB97-C6F8-4DC7-9E34-CC14D3931B69}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Age Vs Goal Per Match' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAdlklEQVR4nO3deXAc2X3Y8W93T8+JwX0RBC8QJA7e5C4X3INcrrnaQ7YcWaWUlUhOlJLs
      VGQ7rkq57CROlZQql5O4XLGrUpFLdtk6Iskq3bau9WovLu8DBEiQIHEN7sExGBxz93T3yx8k
      uAQIcjFDDEBw3qcKNQQ4b94Pjffr1+9192tFCCGQpDylrnUAkrSWZAJIeU0mgJTXZAJIeU0m
      gJTXZAJIeU0mgJTXZAJIeU0mgLQOzXHlnTN0BaexH/GTZAJI60665yR//Z0f8L03L2Jaty9k
      ELZFKmVgWTZC3P4+HosQSxg87FIHx+qELEkrJUXH2Tae/ti/YPzqdcJpi2oNrr75bS71R3EV
      13Hi118m3v4z3uuJoBk2+1/5OHtqfChLfJrsAaR1xZ4d5r0+Py88W88udYxLQ0mYauPH786w
      /yN7GHn/ClNzPfzsR93UP/MCjVUp3v3nS8StpT9PJoC0roSGe+kJBTj1g5/TE+rl9JmbGOEg
      ocItbN9WjVdTITLFYDzFZP8tJgwfVWUuHnQcJA+BpHVl4FYvjS2vcfSZ7ShHNvIPf3+e4deO
      syH0Db7/jWECSQOKatjmjYOnmh0bq0k7CtGWOv5B9gDSOuOuruPFYy3U19dT33SMl09sRCjb
      +fzv/UuatxZS6vTj9G3h4585zmTrW/zy3XMEIxbqAxJAkfcDSOueGOW7f/VDhmMTGJtf4z9+
      ugW3IrAtG6GoaA9q/cgEkJ4QidlJQjGF6uoy9Ic0+MUeywR4DEOSnlCP5SA4nU7fTQLbvn2u
      T1GWn9WStFyPZQ9wL8MwcDgcqKocr0srT7YqKa+t2iGQEILY1ACt59uwKps4tHcHfofBUGcr
      V4Nw6OlDVBc55aGOtKpWrQewYwFOnhuh+aVf5bm9m3CrEOxqY8iq4cThzXRcbiWSftRr+yQp
      M6uWAOFbtyg9+DSFioXm9ODUVaJzs1Rv3oS7sIrNapqQaa5WOJIErOIh0Fw4Qs/YG0RcHqJz
      SXY9ewzbUvG6NFBUvHqUiagF3tWKSJJWMQFcHg97Dv8a+4og1HOLgblJvJgYaQGYxBM6Po8c
      k2dDCMFbvV3sqa6hqsC/1uGsK6vW4jY0b2fowiWGg2OMhKdw6QX4y0oYvnGDkYEuAo4SNrv0
      1QrniZM0TUzrAdf8Sg+0aucBhLAZD3QSTqoIzcXmbVvxWBH6+oZIA96yWrZUFd930ZI8DyDl
      0uqeCBPi7mXZ89Odd6tXlCXv2JEJIOXS6l4KsUQjl/P+0lqSu1Upr8kEkPKaTAApr8kEkPKa
      TAApr8kEkPKaTAApr8kEkPKaTAApr8kEkPKaTAApr8kEkPKaTAApr8kEkPKaTAApr8kEkPKa
      TAApr8kEkPKaTAApr8kEkPKaTAApr8kEkPKaTAApr8kEkPKaTAApr8kEkPKaTAApr8kEkPKa
      TAApr8kEkPKaTAApr8kEkPKaTAApr8kEkPKaTAApr8kEkDIihCCeTGNa9lqHsiJWPQGsaIjB
      0WnSAHaa6WAf1272MZcwWb3HVUrZsmzBl776Hp0DobUOZUVk/ZhU20oTnZsjadxuuKrmpqS8
      6CGPnRQIM8KVs+cYDnk4+vEXEMM3uT44R3mhznjCRcuBJlyOhU+NlI9JfbwIIegaDlNTVoDf
      61rrcB5Z1o9JDZz8O/7sWzfYsKEIBfAW7eOz/+kTVD3g/ULAaPctRPUm/MFRBDA1NkTljhfZ
      WW6ReusCE4bBJsf636hPMkVRaNhUttZhrJiME2C+w7DReOoTv8tvv1K/5AOuF5VCGBP0BWH3
      s5W0tY0CYKZsfF4dFAcl7jihuM0mL6RSqbslbdvGsqxMw5SkZck4ARKzA5x56zJjs3GGur7D
      P0SbcCng8m7i6GuHKVyqkJXk+tvvMF3cxFBXF6OTo5SOTuNSwLYFYGOaGrp+++0u1we9gDwE
      knIp4wRQNB2f30+lv5HK2g9+7nR7HjKiVihrOICI3t6ziztfqtvBzOQcm92C4bSHZtfqPrhe
      krIeBEfHehg0ymjcXIJqznKjbYxNhxrwf+jxUJRrp3vZ9tw+nLOjnDnfgXCAd8MunmqsQVPk
      IFhaPVnvcvsv/5QL/k/QtLkE1CTXfv4z0o0N7Cv4sJIF7Hlu3+1/FtVw7EQVpgUOXVvGWEKS
      VlbWCVBaWcvwe29y2rMHLdTJDSo57sv8cxRVQ5c7d2mNZH0IZCZnuXLyDS53jaP4Kjh49ARP
      by9f6fjkIZCUU1n3AGNXf0mP/wif+51qUEP85C9/TsnvfYZ650qGJ0m5lUUCpBnrvs77py9x
      2Y5TOlcJxjgXAqM0yOl6aZ3JIgEEyegM4dk4CTtEMGiB6uLV3/40O9wrH6Ak5VLWY4BI8BZD
      dg3NG/0rHdMCcgwg5VLWYwBFMTn9rT/n74djuIp0bOd+/uBPfpPKlYxOknIs+0Fwx/tE645z
      WARo+q1DXPzxIKqNvMNAWleybq4Otw+fv4rKihkGJxTU8VuMxFYyNEnKvawToKL5BY7UFNL0
      /NN0/+JnxOsOsjWLE2GStJayv/osbdDd+iZnkzaax4tT2Fjy8EdaZ7K/FujcjzkzXs2rhzai
      ArqrCnkOTFpvsk6A4u3NNM76aN6zG6cCiupCngaQ1pusE8Ccm6Gj9X3mpq/iUMDjb+A3PvsK
      T87NclI+yDoBjGScbcf/FZ9/tQENUBT1EQYUkrQ2sm6zvsJC+v/xh3xzegs64PbV8conj1Ky
      gsFJUq5lnQAlWw/zm5/a+sEHOcuR6zlI603W1wKtFnktkJRLWbcqYVuYli1Xc5PWtawTIHj+
      e/zPv/kFs2mZAtL6lXUCFO/YT23iJqfaepmbmyMSjSPvh5HWm6wHwZGBG1wPjsF3v8JJwFt0
      gH//Xz9F9QoGJ0m5JgfB0qq4OjbKeDTCy/UNOa1nJpHg4sggz2+pwzO/1OBDZN8DjFzjO9/8
      LteHJnj9s1/g+uke/s0XPk6JbKfSEizbJmWaOa9HIDBME7HM6Zmsm+tQ+9tYuz/Fv32lAVG8
      ka3RAP3RbD9NetIdqKnlVxt35byeEo+Xjzbuwqsv79LM7JdGHL/Ot//u21wfmiDtrGD/q5/k
      s6/sx7HCy7vJQyApl7IfAwib6EQ/V671olbWc7B5Cx7HyjdSmQBSLmWdAOPXf8pf/N+3qd7V
      gBm8RXLza/zh507gkT2AtI5kPQgODwTY8Nrn+f2PNqIk+vnq//gBvYkT7PauZHiSlFvZ3xCz
      cQvGm2c5VTaNkxBjswn6rpxFr9tFw4YlH5Mh5bFIKkXaMin1Pl43jmd9XOEpqKC6QqW/q4uu
      rjAbD9Yy3dPF2HRiJeOTnhAd40He7Ola6zDuI0+ESasimU6Ttm38rsfrovmsW5Vtm6RSaSwz
      RbC/l8m51IcXkvKWW9cfu8YPjzAGGL/2Bicnd3DYd4G//Uk3qm8Hv/tHn6ZKW8nwJCm3su4B
      YqFRYi6V7tYuXvjsf+CwY4SB2ZUMTXqSDM/O0DkxvtZh3CfrBCiq3cbQj/4Pb8/sYH9ljLC+
      hY1y8kd6gMlYlN5waK3DuM8jnQk2UklszYVuRplMaFSXfugT8jImB8FSLmU8BkhGR7l2qYvF
      6+DqrioKjjSx8ikgSbmTcQKkU7P037pFeNHP3T6bpiNNKxSWJK2OrA+BhG2RSiZIW7eLK6qO
      x+dmpSeB5CGQlEtZT4NO953hK1//CcGRKEWbfcxa+/iT//6vqVjJ6CQpx7JOgKlAB0XPfoLG
      69dp+NwLXPl6K4YFK94FSFIOZX1c4S4uR7c8VG2c4v23rjM2GiD8kMuAhLCJTo8R6OtlLBzH
      FoBtMjM+QGf3AJGkKdcYWmWTsSj904tHc/kl6wSobD7Oq/traT72OuXJCDtf/Sj1D7nQLznc
      xpkbkwhVZai7jYHxKDPBPjp6RrHjIVo7ukmbMgVWU2A6zLmh/rUOY01lfQikOVyE+0/yzs0g
      +Kuo37bxoTfD6NV7OLFJRwW0xBTReBwrPEDlzhfZWW7R/tYFxo06Njkev+tFnlSHazdzuHbz
      WoexprJOgInrb/GjU2MceaYZLRrgn77+U8r+6NNsfMBKFA5dByxmAle4FoSWwyWEgjY+rw6K
      gxJ3nKmEzSbv7Zmf+ckp27axLLnklpQb2Q+CRwLUPPMbvHRsC2p6J+Nt32AiwQMTQNgpbp5/
      nxGtlldfbEBTFKZUBVsIwMY0NRx3BtD6Peu5pNNpHA4HirLC91pKEo+QABsaDjL6tS/zF5cq
      EIkwEd9TvPrQMcAVBrV6jh3cgkO93ZhVl8rs5BzCJRhJe2hy3w5nqcYuE2DlmYPnsWcGce79
      5FqHsiTLtnmnr4f9G2oo9+XmGoPME0AILMuiePtz/MHv13K1ow/LV8GOhp0UP2QKdGYqzPDN
      Hr7XdQrw0fjc8+yua+Ts+fO8GwB3TRMlLvmMmVVlpyH1+F7CK4Ckmca07ZzVkfGZYDsxzVvv
      nGV7y/OIG2/wtZ9cJI3Atekl/vALr5HpHZ/CNjEtcOgOltrHyzPBUi5l3KqSkTDXe7twKBqp
      yBSbj36G//Kf/x3VfTfpz+J2YEV1oD+g8UtSrmV8zKGqKpaRxjBh01Ov86pSjk8bIG7LmRpp
      /ck4AVzFlTy71c03v/Y9Thzfh9ce4q1Tb5DYf4Kd8kHB0jqT1dWgwpjh0nvv0B4Yx0KnfOse
      Xnz+AGXeD1+OOlNyDCDlUvaXQwuBsG0ECqqqkqtZSpkAUi5l3aoURUHVNDQtd41fevzYQnBu
      sJ9wPL7WoawIuVuVMiKEoH8mTMx4MtaBkgkgZURRFLaXllOQ4SJX1lgH6d53chRV9mQCSBkR
      QtAVmiSSyqwHsGcGsUYu5yiq7Mm1QaW8JluV9EQJxWJ8v6OduGEs6/0yAaQnitOhUVXgR1WX
      NzUpD4GkvCZblZTXZAJIeU0mgJTXZAJIeU0mQA6ZA2exY5MZlZmKx57IxaomY1EGZ6YzKiNs
      C3PgDHY8d9tDJkAOGef/GnvyVkZlAuEpTg/05SiitdM7FeLsYH9mhew0xrkvY08HchITyGnQ
      nJrftJmsaJFNmfXgUbZFpuUyIZdhyKFs/mhPWsOf97hui/W3W5WkFSQTQMprMgGeAEII/vbi
      Wfoew6cwPu5kAjwhjmzeSqkn02XJJDkLlMfmkklSlklFjtbdfNS6hLCxQ12ohbUortzEKFtV
      HuucHOeXPV2rUtf1iTHe7u3OrJBlkHr7T7FCuYtR9gB5LGWamLaNz+lclbos28abQV1CCEQi
      jOL0ozhyE6NMgCeAEIJzQ/3sLK+kzCvHAZmQreoJMTQzQ3SZtwFKH5A9QA5dGB5ke2lZRntl
      a/wG9uww+s6P5DCy7NlCcGl4kB3lFZR4vGsdziNbf61qHembCjGXTGZUxp4bxRq9kqOIHp0Q
      gt5wKONlUR5XsgeQ8ppsVVJekwkg5bW8S4CYYWA+xs8dThkm0YSczVkteZcA/6/tEt1Tj+9F
      Y+9fHeTLP7601mHkjbwbBI/OzVLk9qzK2c9sTEcSzMUNtlQVrXUoeSHvEuBJJITA6nsXtWoX
      akHlWoezpPFohJhhUFdattahLCBb1RPCuPLNnN48/qgGpsNcGR1e6zDuIxNgGeyZQczh1Tku
      H4vM0TkxnnG5rme/RKR8T0ZlgpE5bk5mXlc29rrTfMT/+A3uZQIsgxVsJ932rVWp6+bkBG/2
      ZLaUCsAPb1xleHY2ozKdE2Ordjn0XN9ppi5+Y1XqyoQcA0h5bd22qkB4ipOB3lWpK9Z/lskz
      X1mVuiK9pxg78zerUlc2hG0x/tb/IjmRWc9h9p/GaP9OjqLK3pomQGpunNb33+DHP3mT9t5x
      LDuzzsi0V+eElhACrNU5frURKOZjfKGZsIkGTmPGln8uRQiBNT1AevgSmRxw2Ilpku/8GcmT
      f45IRZdVJplOEwhPLftk55omwMRgF6LqIK//yn5m+nqYNZbfoLeVlvHS9p05jO4DbqeLIn/m
      03cT7/0lifGbGZXxYFKg2hmVEUIw8e7/znivnO5+k+Spv8qoDEBhYhzdXn6SmqkY0WAHxlQv
      8ZnRZZezBk6Tbvsm6dZvYI1cXF5d0wPM/uyPsRMzy3r/miZAbDZG+YZydHcZW1wpxow0AJZl
      3f2a32Mkk0ksy7r7mkqlME3z7qthGHdf0+n03dd7vwzDIPaD3yEdeH9BmXs/a/6z761rtr+V
      mfbvk0wmsW2bRCJx91UIQTwev+8VwNX2VbRw993vl/MqJjoR3W8s+/3zr+0DXQQngwvimI/v
      3nht2777e6RCPcQDpx+4Te/dtvPbz0yncZpxVNtcsJ0XvOe+z0iTis0ikhESidiCbfugbZpI
      JDBLG/nTmU/T4ztC0r3hQ7dBIpHAZcyxbfI8Djt1X5tZ6vdc06URFcWBpimgKGiqQdK43djv
      7Sbn/21ZFg6HA9u2b3eploWqqti2jaqqWHe6vPnvbdu+b2k9IQT6vk+hlNRh2/Z9ZeY/07Is
      NE27W6ey6QiuinpM00TX9bvlTNO8G8v89/e+el76bziq95Jc9POHvbrqXkQtrVv2++dfC1/6
      Y9Bd9/1cCHH7c12uuzuU+d9Dqz+Bo3L33d/z3t//3m04vz1s20ZBwfXyl1ArmzHv/C0URUEI
      seTfwbIsdFcB/kO/hSMVxi7aeHeb6br+wG1qmibesjp+/WMfZXNNEbav+EO3gaqq6EWbcL38
      RRR3MVbauvvZD2o7azoLdOv8zxFbXqKh0uLKm+cpe+FZtngXPoBZzgJJubSmPUBZ9QbOXz5N
      pAzGPeXscuprGY6Uh9a0BxCWSTwWJWWB21eAR3eweEFg2QNIuSRPhEl5TbYqKa/JBJDy2rp4
      QowQAtvO7OSQJC3HukiA+TniTMtompZRmfm5a1lX9uWyiW8161pcZl0kQKaDYCEEQgicGd72
      mM2Ae7XrArKqS9f1jB9Ql06nM64rlUplXJdt25imuSp1pVKpBfXIMYCU1x77adD50/GZ7r3m
      T83LumRdi8vcW89jnwCSlEvaF7/4xS+udRAfzmJqoJOeKYWKEh+KlWJ8fAzFVYjzYWMgIbBt
      i2R8mkBXEG9lKXoqQue1Vq51dhMIBAgMBnGVVON3awvKpY04wd4BYm4vfqeOsNNM9N+k7Won
      kzFBYXEhTk1dVJdJMj5DoHsMb2UJurBJx8JcOvMeHf1zlFZW4NY1FuyvbJPwWD9X29oYDBkU
      l5Xg1AQzI12cPnmBsOKjrNiHQ1UW1GUkZgl0ttN+awjT4aOk0A2WSWRqhL7JBKWFBaiLd4y2
      yVQwwNW2dgan0hSXFqMrJtMjvbRevc7YbJrC4iJcDvW+uvputHO1axhL91Hsd5GYGubypVa6
      B8bQCsrwe/SFZ/Ftk9BoH1fb2xkKmxSXFePUVBQE8ekhWjuGKC4vw7m4rvgMvXfqsp0FFPvd
      2KEefnmmjYH+ABOz5u1y93YWdprJkT6u3gjg9JficzswE7P0tJ/l/dY+9IIyivxuFhZJMhro
      XC9jAJtwaJqha+cYmDPBSjE+Pkos/eElI+PdnDl7g4H+AAkAp4/tzftpaWmh5XAzWjSO6lw0
      F2BGudV+mcsXO5lMJgCITfXQ3pfiwJHnqDYGudQbvK+uubFuTp+5wcBAP0kAI8zZ0x1sfvoE
      L+3xc/5UG9FFE1p2JEj3mEnzMy/QWCm42n6LSGSMa93THHrpOL5wD10j0wvKCGEzNtCHVbaT
      oy3NTLa2MonNzGg3l86c58bwNEtNGtuRUbrHbXY98wI7yyyuXesmEhtncBL2HT7CdscErYHQ
      orosgv0BqGjgaEsjE5dbCWEwG9HYfeQYx55pou/0PzMcW1TX3Ag9k7C75QXqiw06OnowAWHM
      cPNyG72TIaKphVEK22RkoB+1uomjLY2MXWolBEx236JoVwstLS3sa9yCV1uirpDKruZaOk9f
      ZpY0PRfPEi3fz8dePUZtqZvF+4JkKMBounS9JACAj20NGwne6iaZwSkBb9lWXjj+HBWeO5tA
      UXG6PHg9HoxgF/bmvR/83zzVRd3eIxxurkW/s4UUzYnLoWKaBqbixKvfP4HmK9/G0ePPUuG+
      84NknFRxOWVuB3ppPVs9QcbmFpZR/Bt5ev8OChwKpmWA6sSIjaOXbqfY62b7xkLGZxctsa6o
      1DbsZ2dNMcIySCk6ThQ8Zds4duww5QVLT+4p/loO76+/U1cKRXXiLdjI3gM78TkgZQh0x6Jt
      oWhsatxH/YYihHm7Lh031VuqcYk0KSOB0ApwL7qOUSncxOF92/FpkLYMFNWJItKM3OqGjU3U
      +pc4blcdbGncx/aqQmwzhaHoODEIzWiUFqqoqobDqd93vZhSuJln9tXhVtOYqgtHaoz+WAU7
      KnTiqTSaQ0dZdKDvrmrgqaaa9TENOs9fXkt65hYj4eLlFVAUdJdnyf+yklNcG3VyoKWU+46i
      NCdeDe5dY8HpK6FI9HHy7UE0vZimWv+SdS0YUvnL2KgM09bWhtvlIm7YFC3qARRVxUzM0tfZ
      zlC8hJaWeqyx82huDwoKTqfGbCS+qCoFBZvp4R7aeoap2neQElTweuAhvaKiqpjxGXpvtjOc
      KOPIM3XoqsCMhei80UXYLuapXeVL1GURHuqlvXeUDQcOUgIIYrS/9x6BWWg48BTFixNAVUnH
      p+nrvMpIqoKWw9swpgIMJDzsbyrncuj+O8Pm65oa7KG9L8jGg4coBuaqPVz4+U+5qulUbtrJ
      gX2NFOiL6oqFudweYvfz+yhI9TAdHubiuQiqFSVVsI2jTzfj1T/IHFVRiIeD6ysBcHjYWVfO
      6a4g5Y/41MzpyTH0wgoKHjqI+EB8tJOpoj28frSK9MQNTgbG2VZe9/BCqo+mg/sZGRwlpbow
      J524XYveIwx6r1xktrSR5/fW4HbAjOogHY8jRAHJRAqfZ1HCC8HcaA9t/dM0H3yWikI3yyIM
      eq5cJFLezPN7N+B2gG1E6bjaAeU7aanbgEtbtHsVgtmRbtoH52g+dIQKvxuEAAo49Cuvszcx
      y7UrrQwXlVJX7lxQV3frReIVu3l+XzUuB3ReO8WVToNA50WCk1MMRQr5xOsHcN9b13AX14Zj
      7D70LOV+FwjBpv1H2XxAAWFx7dQvGJvbQX2ZtqCurtZLVGw/RJVPB8NFSeUOjr3UhGbMcvFq
      N8mUtaDXNpMzXGu/sc4SAPBUNdIQ+EfeGymiZqcgGhonqvmp9pp0TxrsqK344M1CEA0HmZhN
      Mj41hdLXh7phK8XuJP1dw1Q9/TKOpabQjChDYyHGxseJaBr+NBQ4CzHDA/T1xUhNTeAqaFhY
      Zr6umQRjd+pSaragzoZJO5zYcyPECprYs6jjSA+3cnrY5qA3xM2OMAXlNWwo3ITd0cbNQD0z
      gSh1u3csrMpO09lxmYSrnmDgJkGcbN21E2V6gqnxEUJjJv3FXqqqKin06PfUdYnTo3DIN8nN
      jin8FRsptAN09UWp80zQeW0CX+U2dtR8sC6psFJc77hCylNPsO8mY4qLrfWbmR4dxFBdOGyD
      eBrKHQuPptNDFzgT1HiqYILOjhD+yo3sOPYZmo4DyRlOXmxn577d3Ju6wkxwraOdlK+e0b5O
      gqqbrfWbmBkZIC5cOEkSMjzsWjQIMAbPcWbMwdP+ITojUbZs38JW1xtcuOGiRouQsHR0fWGZ
      6a5TdM6VrJdZIAWXx4vP50XXNLxlFRR5iqgo8yOMOKbqwqcLZpM2Jf6Fz61Kp+Ik0zb+sjI8
      TifegiLcDgvNXUl1hW/pQZCVJhpP4vQX4vd4cLk9FJVtoNhpEE+mUQuqaNhWvXC2BDCSMZJp
      m8KyMrxOJ15/IaoRZTaSxFJ87GjehnfRHtZWdbwuDVVVUVUVl9dPaUkJhT4HyaSJr2IDm6vL
      F84CAbruQNN0NE1FVR0UlZeipBKkcFJa5MfpdOH1+RbEaCuL6vL5KS7w4XTpODTtzs+KKSm4
      t5tScDruqUvTKS4rRSRjJFIGpi0oq22ktty7YNbJVpx4nCranbrc3kKK/J7b71FUfAWFFBb4
      cCzYHgpO3YGmOdA0FU3VKaoox2nGiSRS2AJq6vdQVagvGNTaihPvnbocTg9FxcWUV5ZhxWNY
      qpOaTVspKXAuHDuoTlxOjf8P5KJ7HYYa/s0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Distribution of players per age' width='192'>
      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
      1KkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Goal types per player' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Goals Vs Appeareances' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Premier Leage Dashboard 1991-2020' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Premier League story' width='192'>
      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
      0P8DUOedB/mz0OYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top Players by Goals per match ' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top Scorers' width='192'>
      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
    </thumbnail>
    <thumbnail height='139' name='avg goal per match by position' width='192'>
      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
      AeVgjcnd7IeGAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
